s # Rime schema
# vim: set sw=2 sts=2 et:
# encoding: utf-8

schema:
  schema_id: snomiao_japanese
  name: "雪星日本語方案2"
  version: "1.1.2"
  author:
    - ensigma96 <ensigma96@gmail.com>
    - snomiao <snomiao@gmail.com>
  dependencies:
    - pinyin_japanese
    - wubi86_japanese
    - wubi86
    - translate_en2jp
    - stroke

switches:
  - name: ascii_mode
    reset: 0
    states: [中文, 西文]
  - name: full_shape
    states: [半角, 全角]
  - name: extended_charset
    states: [常用, 增廣]
  - name: simplification
    states: [漢字, 汉字]
  - name: ascii_punct
    states: [。，, ．，]
  - name: emoji_suggestion
    reset: 1
    states: ["🈚️️\uFE0E", "🈶️️\uFE0F"]

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@japanese_lookup
    - affix_segmentor@translate_en2jp_lookup
    - affix_segmentor@wubi86_japanese_lookup
    - affix_segmentor@pinyin_japanese_lookup
    - affix_segmentor@stroke_lookup
    - affix_segmentor@wubi86_lookup
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    # - script_translator
    # - reverse_lookup_translator
    - table_translator@japanese_lookup
    - table_translator@translate_en2jp_lookup
    - table_translator@wubi86_japanese_lookup
    - script_translator@pinyin_japanese_lookup
    - table_translator@stroke_lookup
    - table_translator@wubi86_lookup
  filters:
    - simplifier@emoji_suggestion
    - uniquifier
    - reverse_lookup_filter@japanese_reverse_lookup
    - reverse_lookup_filter@translate_en2jp_reverse_lookup

abc_segmentor:
  extra_tags:
    - japanese_lookup
    - translate_en2jp_lookup
    - wubi86_japanese_lookup
    - pinyin_japanese_lookup
    - wubi86_lookup

speller:
  alphabet: "zyxwvutsrqponmlkjihgfedcba-_"
  delimiter: " '"
  algebra:
    - "derive/_/x/"
    - "derive/-/q/"
    # Add / remove rules the as you wish
    - "derive/i_e/ye/"
    - "derive/tu/tsu/"
    - "derive/si/shi/"
    # - 'derive/fu/hu/'


# lookupers
japanese_lookup:
  dictionary: snomiao_japanese
  spelling_hints: 5
  comment_format:
    - "xlit|q|ー|"
  preedit_format:
    - "xlit|q|ー|"

pinyin_japanese_lookup:
  tag: pinyin_japanese_lookup
  prefix: "P"
  dictionary: pinyin_japanese
  prism: pinyin_japanese
  tips: 〔拼音和字〕
  preedit_format:
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/

translate_en2jp_lookup:
  tag: translate_en2jp_lookup
  dictionary: translate_en2jp
  prism: translate_en2jp
  prefix: "E"
  suffix: "`"
  tips: 〔English->日本語〕

stroke_lookup:
  tag: stroke_lookup
  dictionary: stroke
  enable_completion: true
  prefix: "H"
  suffix: "`"
  tips: 〔筆畫輸入〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/
  comment_format:
    - xlit/hspnz/一丨丿丶乙/

wubi86_japanese_lookup:
  tag: wubi86_japanese_lookup
  dictionary: wubi86_japanese
  prism: wubi86_japanese
  enable_completion: true
  prefix: "J"
  suffix: "`"
  tips: 〔五筆和字〕
  comment_format:
    - xlit/gh/-|/

wubi86_lookup:
  tag: wubi86_lookup
  dictionary: wubi86
  prism: wubi86
  enable_completion: true
  prefix: "W"
  suffix: "`"
  tips: 〔五筆漢字〕
  comment_format:
    - xlit/gh/-|/

recognizer:
  import_preset: default
  patterns:
    easy_en_lookup: "^E[a-z]*'?$"
    pinyin_japanese_lookup: "^P[a-z;/,.]*`?$"
    punct: "^/([0-9]+[a-z]*|[a-z]+)$"
    stroke_lookup: "^H[a-z]*`?$"
    translate_en2jp_lookup: "^T[a-z;/,.]*`?$"
    wubi86_lookup: "^W[a-z]*'?$"

# emoji生成, 注：字形転化会影響反査故本方案使用詞典進行転換。
emoji_suggestion:
  opencc_config: emoji.json
  option_name: emoji_suggestion
  tips: all

##########################
# Lookup
japanese_reverse_lookup:
  tags: [translate_en2jp_lookup, wubi86_japanese_lookup, stroke_lookup, pinyin_japanese_lookup]
  spelling_hints: 5
  dictionary: japanese

translate_en2jp_reverse_lookup:
  tags: [translate_en2jp_lookup]
  spelling_hints: 5
  dictionary: translate_en2jp

##########################
# other
punctuator:
  import_preset: default

key_binder:
  import_preset: default
  bindings:
    - { accept: "Control+Shift+1", select: .next, when: always }

editor:
  bindings:
    Alt_L: commit_comment
    # Shift_L: commit_comment

menu:
  page_size: 10
